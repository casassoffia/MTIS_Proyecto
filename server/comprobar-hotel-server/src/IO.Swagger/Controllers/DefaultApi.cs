/*
 * COMPROBAR HOTEL
 *
 * API para COMPROBAR HOTEL
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// Comprobar hoteles disponibles
        /// </summary>
        /// <param name="listaHoteles">Lista de hoteles que cumplen las características anteriores</param>
        /// <response code="200">Hoteles con las características</response>
        /// <response code="400">ERROR 400: No hay hoteles con esas características</response>
        [HttpPost]
        [Route("/futratioiw/ComprobarHotel/1.0.0/comprobarDisponibilidad")]
        [ValidateModelState]
        [SwaggerOperation("ComprobarDisponibilidadPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Hotel>), description: "Hoteles con las características")]
        public virtual IActionResult ComprobarDisponibilidadPost([FromQuery][Required()]List<Hotel> listaHoteles)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Hotel>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"numeroPersonas\" : 2,\n  \"disponibilidad\" : true,\n  \"puntuacion\" : 7,\n  \"precioNoche\" : 123.96,\n  \"lugar\" : \"Barcelona\",\n  \"name\" : \"Melia\",\n  \"description\" : \"Hotel con vistas al mar\",\n  \"id\" : 1\n}, {\n  \"numeroPersonas\" : 2,\n  \"disponibilidad\" : true,\n  \"puntuacion\" : 7,\n  \"precioNoche\" : 123.96,\n  \"lugar\" : \"Barcelona\",\n  \"name\" : \"Melia\",\n  \"description\" : \"Hotel con vistas al mar\",\n  \"id\" : 1\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Hotel>>(exampleJson)
                        : default(List<Hotel>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Comprobar hoteles para esas caracterísiticas
        /// </summary>
        /// <param name="fechaIn">Check-in con formato DD-MM-YYYY</param>
        /// <param name="fechaOut">Check-out con formato DD-MM-YYYY</param>
        /// <param name="lugar">pasar lugar de la estancia</param>
        /// <response code="200">Hoteles con las características</response>
        /// <response code="400">ERROR 400: No hay hoteles con esas características</response>
        [HttpPost]
        [Route("/futratioiw/ComprobarHotel/1.0.0/comprobarFechaLugar/{fechaIn}/{fechaOut}/{lugar}")]
        [ValidateModelState]
        [SwaggerOperation("ComprobarFechaLugarFechaInFechaOutLugarPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Hotel>), description: "Hoteles con las características")]
        public virtual IActionResult ComprobarFechaLugarFechaInFechaOutLugarPost([FromRoute][Required]string fechaIn, [FromRoute][Required]string fechaOut, [FromRoute][Required]string lugar)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Hotel>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"numeroPersonas\" : 2,\n  \"disponibilidad\" : true,\n  \"puntuacion\" : 7,\n  \"precioNoche\" : 123.96,\n  \"lugar\" : \"Barcelona\",\n  \"name\" : \"Melia\",\n  \"description\" : \"Hotel con vistas al mar\",\n  \"id\" : 1\n}, {\n  \"numeroPersonas\" : 2,\n  \"disponibilidad\" : true,\n  \"puntuacion\" : 7,\n  \"precioNoche\" : 123.96,\n  \"lugar\" : \"Barcelona\",\n  \"name\" : \"Melia\",\n  \"description\" : \"Hotel con vistas al mar\",\n  \"id\" : 1\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Hotel>>(exampleJson)
                        : default(List<Hotel>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Comprobar hoteles para esas caracterísiticas
        /// </summary>
        /// <param name="n">Número de personas</param>
        /// <param name="listaHoteles">Lista de hoteles que cumplen las características anteriores</param>
        /// <response code="200">Hoteles con las características</response>
        /// <response code="400">ERROR 400: No hay hoteles con esas características</response>
        [HttpPost]
        [Route("/futratioiw/ComprobarHotel/1.0.0/comprobarPersonas/{n}")]
        [ValidateModelState]
        [SwaggerOperation("ComprobarPersonasNPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Hotel>), description: "Hoteles con las características")]
        public virtual IActionResult ComprobarPersonasNPost([FromRoute][Required]int? n, [FromQuery][Required()]List<Hotel> listaHoteles)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Hotel>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"numeroPersonas\" : 2,\n  \"disponibilidad\" : true,\n  \"puntuacion\" : 7,\n  \"precioNoche\" : 123.96,\n  \"lugar\" : \"Barcelona\",\n  \"name\" : \"Melia\",\n  \"description\" : \"Hotel con vistas al mar\",\n  \"id\" : 1\n}, {\n  \"numeroPersonas\" : 2,\n  \"disponibilidad\" : true,\n  \"puntuacion\" : 7,\n  \"precioNoche\" : 123.96,\n  \"lugar\" : \"Barcelona\",\n  \"name\" : \"Melia\",\n  \"description\" : \"Hotel con vistas al mar\",\n  \"id\" : 1\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Hotel>>(exampleJson)
                        : default(List<Hotel>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Comprobar hoteles para esas caracterísiticas
        /// </summary>
        /// <param name="precioInicio">Rango inicial del precio</param>
        /// <param name="precioFin">Rango final del precio</param>
        /// <param name="listaHoteles">Lista de hoteles que cumplen las características anteriores</param>
        /// <response code="200">Hoteles con las características</response>
        /// <response code="400">ERROR 400: No hay hoteles con esas características</response>
        [HttpPost]
        [Route("/futratioiw/ComprobarHotel/1.0.0/comprobarPrecios/{precioInicio}/{precioFin}")]
        [ValidateModelState]
        [SwaggerOperation("ComprobarPreciosPrecioInicioPrecioFinPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Hotel>), description: "Hoteles con las características")]
        public virtual IActionResult ComprobarPreciosPrecioInicioPrecioFinPost([FromRoute][Required]decimal? precioInicio, [FromRoute][Required]decimal? precioFin, [FromQuery][Required()]List<Hotel> listaHoteles)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Hotel>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"numeroPersonas\" : 2,\n  \"disponibilidad\" : true,\n  \"puntuacion\" : 7,\n  \"precioNoche\" : 123.96,\n  \"lugar\" : \"Barcelona\",\n  \"name\" : \"Melia\",\n  \"description\" : \"Hotel con vistas al mar\",\n  \"id\" : 1\n}, {\n  \"numeroPersonas\" : 2,\n  \"disponibilidad\" : true,\n  \"puntuacion\" : 7,\n  \"precioNoche\" : 123.96,\n  \"lugar\" : \"Barcelona\",\n  \"name\" : \"Melia\",\n  \"description\" : \"Hotel con vistas al mar\",\n  \"id\" : 1\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Hotel>>(exampleJson)
                        : default(List<Hotel>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
